{"ast":null,"code":"import _regeneratorRuntime from\"/Users/andre/chatfront/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _toConsumableArray from\"/Users/andre/chatfront/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _asyncToGenerator from\"/Users/andre/chatfront/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/andre/chatfront/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ApiCallComponent(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),clientMessage=_useState2[0],setClientMessage=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),messages=_useState4[0],setMessages=_useState4[1];var handleSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var serverEndpoint,response,botResponseText;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:if(!(clientMessage.trim()!=='')){_context.next=14;break;}_context.prev=1;serverEndpoint='https://deva.ark4.xyz/api';// Updated endpoint URL\n// Send the message as an object with a 'user_input' key\n_context.next=5;return axios.post(serverEndpoint,{user_input:clientMessage},// Send the message as 'user_input'\n{headers:{'Content-Type':'application/json'}});case 5:response=_context.sent;botResponseText=response.data.response;// Assuming your server responds with 'response'\n// Add the user and bot messages to the list of messages\nsetMessages([].concat(_toConsumableArray(messages),[{text:clientMessage,sender:'user'},{text:botResponseText,sender:'bot'}]));// Clear the input field\nsetClientMessage('');_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](1);console.error('Error:',_context.t0);case 14:case\"end\":return _context.stop();}},_callee,null,[[1,11]]);}));return function handleSubmit(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-container\",children:messages.map(function(message,index){return/*#__PURE__*/_jsx(\"div\",{className:\"message \".concat(message.sender),children:message.text},index);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-input\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Type your message...\",value:clientMessage,onChange:function onChange(e){return setClientMessage(e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmit,children:\"Send\"})]})]});}export default ApiCallComponent;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","ApiCallComponent","_useState","_useState2","_slicedToArray","clientMessage","setClientMessage","_useState3","_useState4","messages","setMessages","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","serverEndpoint","response","botResponseText","wrap","_callee$","_context","prev","next","trim","post","user_input","headers","sent","data","concat","_toConsumableArray","text","sender","t0","console","error","stop","apply","arguments","children","className","map","message","index","type","placeholder","value","onChange","e","target","onClick"],"sources":["/Users/andre/chatfront/src/ApiCallComponent.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction ApiCallComponent() {\n  const [clientMessage, setClientMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  const handleSubmit = async () => {\n    if (clientMessage.trim() !== '') {\n      try {\n        const serverEndpoint = 'https://deva.ark4.xyz/api'; // Updated endpoint URL\n\n        // Send the message as an object with a 'user_input' key\n        const response = await axios.post(\n          serverEndpoint,\n          { user_input: clientMessage }, // Send the message as 'user_input'\n          {\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          }\n        );\n\n        const botResponseText = response.data.response; // Assuming your server responds with 'response'\n\n        // Add the user and bot messages to the list of messages\n        setMessages([\n          ...messages,\n          { text: clientMessage, sender: 'user' },\n          { text: botResponseText, sender: 'bot' },\n        ]);\n\n        // Clear the input field\n        setClientMessage('');\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"message-container\">\n        {messages.map((message, index) => (\n          <div\n            key={index}\n            className={`message ${message.sender}`}\n          >\n            {message.text}\n          </div>\n        ))}\n      </div>\n\n      <div className=\"chat-input\">\n        <input\n          type=\"text\"\n          placeholder=\"Type your message...\"\n          value={clientMessage}\n          onChange={(e) => setClientMessage(e.target.value)}\n        />\n        <button onClick={handleSubmit}>Send</button>\n      </div>\n    </div>\n  );\n}\n\nexport default ApiCallComponent;\n"],"mappings":"wcAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE1B,QAAS,CAAAC,gBAAgBA,CAAA,CAAG,CAC1B,IAAAC,SAAA,CAA0CP,QAAQ,CAAC,EAAE,CAAC,CAAAQ,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA/CG,aAAa,CAAAF,UAAA,IAAEG,gBAAgB,CAAAH,UAAA,IACtC,IAAAI,UAAA,CAAgCZ,QAAQ,CAAC,EAAE,CAAC,CAAAa,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAArCE,QAAQ,CAAAD,UAAA,IAAEE,WAAW,CAAAF,UAAA,IAE5B,GAAM,CAAAG,YAAY,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAA,MAAAC,cAAA,CAAAC,QAAA,CAAAC,eAAA,QAAAL,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,cACfnB,aAAa,CAACoB,IAAI,CAAC,CAAC,GAAK,EAAE,GAAAH,QAAA,CAAAE,IAAA,WAAAF,QAAA,CAAAC,IAAA,GAErBN,cAAc,CAAG,2BAA2B,CAAE;AAEpD;AAAAK,QAAA,CAAAE,IAAA,SACuB,CAAA5B,KAAK,CAAC8B,IAAI,CAC/BT,cAAc,CACd,CAAEU,UAAU,CAAEtB,aAAc,CAAC,CAAE;AAC/B,CACEuB,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CACF,CAAC,QARKV,QAAQ,CAAAI,QAAA,CAAAO,IAAA,CAURV,eAAe,CAAGD,QAAQ,CAACY,IAAI,CAACZ,QAAQ,CAAE;AAEhD;AACAR,WAAW,IAAAqB,MAAA,CAAAC,kBAAA,CACNvB,QAAQ,GACX,CAAEwB,IAAI,CAAE5B,aAAa,CAAE6B,MAAM,CAAE,MAAO,CAAC,CACvC,CAAED,IAAI,CAAEd,eAAe,CAAEe,MAAM,CAAE,KAAM,CAAC,EACzC,CAAC,CAEF;AACA5B,gBAAgB,CAAC,EAAE,CAAC,CAACgB,QAAA,CAAAE,IAAA,kBAAAF,QAAA,CAAAC,IAAA,IAAAD,QAAA,CAAAa,EAAA,CAAAb,QAAA,aAErBc,OAAO,CAACC,KAAK,CAAC,QAAQ,CAAAf,QAAA,CAAAa,EAAO,CAAC,CAAC,yBAAAb,QAAA,CAAAgB,IAAA,MAAAtB,OAAA,iBAGpC,kBA/BK,CAAAL,YAAYA,CAAA,SAAAC,IAAA,CAAA2B,KAAA,MAAAC,SAAA,OA+BjB,CAED,mBACExC,KAAA,QAAAyC,QAAA,eACE3C,IAAA,QAAK4C,SAAS,CAAC,mBAAmB,CAAAD,QAAA,CAC/BhC,QAAQ,CAACkC,GAAG,CAAC,SAACC,OAAO,CAAEC,KAAK,qBAC3B/C,IAAA,QAEE4C,SAAS,YAAAX,MAAA,CAAaa,OAAO,CAACV,MAAM,CAAG,CAAAO,QAAA,CAEtCG,OAAO,CAACX,IAAI,EAHRY,KAIF,CAAC,EACP,CAAC,CACC,CAAC,cAEN7C,KAAA,QAAK0C,SAAS,CAAC,YAAY,CAAAD,QAAA,eACzB3C,IAAA,UACEgD,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,sBAAsB,CAClCC,KAAK,CAAE3C,aAAc,CACrB4C,QAAQ,CAAE,SAAAA,SAACC,CAAC,QAAK,CAAA5C,gBAAgB,CAAC4C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC,EAAC,CACnD,CAAC,cACFlD,IAAA,WAAQsD,OAAO,CAAEzC,YAAa,CAAA8B,QAAA,CAAC,MAAI,CAAQ,CAAC,EACzC,CAAC,EACH,CAAC,CAEV,CAEA,cAAe,CAAAxC,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}