{"ast":null,"code":"var _jsxFileName = \"/Users/andre/speech-to-text-polly/src/all.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport AWS from 'aws-sdk';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TalkComponent = () => {\n  _s();\n  const [isListening, setIsListening] = useState(false);\n  const [isSupported, setIsSupported] = useState(true);\n  const [transcribedText, setTranscribedText] = useState('');\n  const [audioUrl, setAudioUrl] = useState('');\n  const [message, setMessage] = useState('');\n  const [apiResponse, setApiResponse] = useState('');\n  const toggleListening = () => {\n    if (isListening) {\n      recognition.stop();\n    } else {\n      recognition.start();\n    }\n  };\n  const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();\n  recognition.onstart = () => {\n    setIsListening(true);\n  };\n  recognition.onresult = event => {\n    const result = event.results[0][0].transcript;\n    setTranscribedText(result);\n  };\n  recognition.onend = () => {\n    setIsListening(false);\n  };\n  recognition.onerror = event => {\n    console.error('Speech recognition error:', event.error);\n    setIsListening(false);\n  };\n  const handleTextToSpeech = async textToSpeak => {\n    try {\n      setAudioUrl('');\n      AWS.config.update({\n        accessKeyId: 'AKIAR22DSRP6A3INZCOZ',\n        secretAccessKey: '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',\n        region: 'eu-west-1'\n      });\n      const polly = new AWS.Polly();\n      const response = await polly.synthesizeSpeech({\n        Text: textToSpeak,\n        OutputFormat: 'mp3',\n        VoiceId: 'Matthew'\n      }).promise();\n      const blob = new Blob([response.AudioStream], {\n        type: 'audio/mpeg'\n      });\n      const url = URL.createObjectURL(blob);\n      setAudioUrl(url);\n      setMessage('Audio synthesis complete.');\n    } catch (error) {\n      setMessage(error.code === 'NoCredentialsError' ? 'AWS credentials not found. Make sure to configure your AWS credentials.' : `An error occurred: ${error.message}`);\n    }\n  };\n  const handleSendToApi = async () => {\n    try {\n      const serverEndpoint = 'https://deva.ark4.xyz/api'; // Updated endpoint URL\n\n      const requestData = {\n        user_input: transcribedText // Assuming the API expects 'user_input'\n      };\n\n      const response = await axios.post(serverEndpoint, requestData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const apiResponseText = response.data.response;\n      setApiResponse(apiResponseText);\n\n      // Automatically start text-to-speech when the API response is received\n      if (apiResponseText) {\n        await handleTextToSpeech(apiResponseText);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  useEffect(() => {\n    if (!('SpeechRecognition' in window) && !('webkitSpeechRecognition' in window)) {\n      setIsSupported(false);\n    }\n    return () => {\n      recognition.stop();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Speech to Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), isSupported && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleListening,\n        children: isListening ? 'Stop Listening' : 'Start Listening'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), isListening && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Listening...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true), !isSupported && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Speech recognition is not supported in this browser.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Transcribed Text:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: transcribedText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), transcribedText && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendToApi,\n        children: \"Send to API\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"API Response Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: apiResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Text to Speech Conversion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleTextToSpeech(apiResponse),\n        children: \"Convert to Speech\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this), audioUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Audio Output\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          children: [/*#__PURE__*/_jsxDEV(\"source\", {\n            src: audioUrl,\n            type: \"audio/mpeg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this), \"Your browser does not support the audio element.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(TalkComponent, \"YGky0IoAZnusqEX4bVEsav/IUZM=\");\n_c = TalkComponent;\nexport default TalkComponent;\nvar _c;\n$RefreshReg$(_c, \"TalkComponent\");","map":{"version":3,"names":["React","useState","useEffect","axios","AWS","jsxDEV","_jsxDEV","Fragment","_Fragment","TalkComponent","_s","isListening","setIsListening","isSupported","setIsSupported","transcribedText","setTranscribedText","audioUrl","setAudioUrl","message","setMessage","apiResponse","setApiResponse","toggleListening","recognition","stop","start","window","SpeechRecognition","webkitSpeechRecognition","onstart","onresult","event","result","results","transcript","onend","onerror","console","error","handleTextToSpeech","textToSpeak","config","update","accessKeyId","secretAccessKey","region","polly","Polly","response","synthesizeSpeech","Text","OutputFormat","VoiceId","promise","blob","Blob","AudioStream","type","url","URL","createObjectURL","code","handleSendToApi","serverEndpoint","requestData","user_input","post","headers","apiResponseText","data","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","controls","src","_c","$RefreshReg$"],"sources":["/Users/andre/speech-to-text-polly/src/all.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport AWS from 'aws-sdk';\n\nconst TalkComponent = () => {\n  const [isListening, setIsListening] = useState(false);\n  const [isSupported, setIsSupported] = useState(true);\n  const [transcribedText, setTranscribedText] = useState('');\n  const [audioUrl, setAudioUrl] = useState('');\n  const [message, setMessage] = useState('');\n  const [apiResponse, setApiResponse] = useState('');\n\n  const toggleListening = () => {\n    if (isListening) {\n      recognition.stop();\n    } else {\n      recognition.start();\n    }\n  };\n\n  const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();\n\n  recognition.onstart = () => {\n    setIsListening(true);\n  };\n\n  recognition.onresult = (event) => {\n    const result = event.results[0][0].transcript;\n    setTranscribedText(result);\n  };\n\n  recognition.onend = () => {\n    setIsListening(false);\n  };\n\n  recognition.onerror = (event) => {\n    console.error('Speech recognition error:', event.error);\n    setIsListening(false);\n  };\n\n  const handleTextToSpeech = async (textToSpeak) => {\n    try {\n      setAudioUrl('');\n      AWS.config.update({\n        accessKeyId: 'AKIAR22DSRP6A3INZCOZ',\n        secretAccessKey: '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',\n        region: 'eu-west-1',\n      });\n      \n\n      const polly = new AWS.Polly();\n      const response = await polly.synthesizeSpeech({\n        Text: textToSpeak,\n        OutputFormat: 'mp3',\n        VoiceId: 'Matthew',\n      }).promise();\n\n      const blob = new Blob([response.AudioStream], { type: 'audio/mpeg' });\n      const url = URL.createObjectURL(blob);\n\n      setAudioUrl(url);\n      setMessage('Audio synthesis complete.');\n    } catch (error) {\n      setMessage(\n        error.code === 'NoCredentialsError'\n          ? 'AWS credentials not found. Make sure to configure your AWS credentials.'\n          : `An error occurred: ${error.message}`\n      );\n    }\n  };\n\n  const handleSendToApi = async () => {\n    try {\n      const serverEndpoint = 'https://deva.ark4.xyz/api'; // Updated endpoint URL\n  \n      const requestData = {\n        user_input: transcribedText, // Assuming the API expects 'user_input'\n      };\n  \n      const response = await axios.post(\n        serverEndpoint,\n        requestData,\n        {\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n  \n      const apiResponseText = response.data.response;\n      setApiResponse(apiResponseText);\n  \n      // Automatically start text-to-speech when the API response is received\n      if (apiResponseText) {\n        await handleTextToSpeech(apiResponseText);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  \n\n  useEffect(() => {\n    if (!('SpeechRecognition' in window) && !('webkitSpeechRecognition' in window)) {\n      setIsSupported(false);\n    }\n\n    return () => {\n      recognition.stop();\n    };\n  }, []);\n\n  return (\n    <div>\n      <h2>Speech to Text</h2>\n      {isSupported && (\n        <>\n          <button onClick={toggleListening}>\n            {isListening ? 'Stop Listening' : 'Start Listening'}\n          </button>\n          {isListening && <p>Listening...</p>}\n        </>\n      )}\n      {!isSupported && <p>Speech recognition is not supported in this browser.</p>}\n      <h3>Transcribed Text:</h3>\n      <p>{transcribedText}</p>\n      {transcribedText && (\n        <>\n          <button onClick={handleSendToApi}>Send to API</button>\n          <h2>API Response Text</h2>\n          <p>{apiResponse}</p>\n          <h3>Text to Speech Conversion</h3>\n          <button onClick={() => handleTextToSpeech(apiResponse)}>Convert to Speech</button>\n          <p>{message}</p>\n          {audioUrl && (\n            <div>\n              <h4>Audio Output</h4>\n              <audio controls>\n                <source src={audioUrl} type=\"audio/mpeg\" />\n                Your browser does not support the audio element.\n              </audio>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default TalkComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}