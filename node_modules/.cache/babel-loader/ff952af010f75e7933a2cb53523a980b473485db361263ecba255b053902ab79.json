{"ast":null,"code":"import React from'react';import{useWhisper}from'@chengsokdara/use-whisper';// Make sure to import the useWhisper hook from your package\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var WhisperTranscription=function WhisperTranscription(){var _useWhisper=useWhisper({apiKey:'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'// Replace with your OpenAI API token\n}),recording=_useWhisper.recording,speaking=_useWhisper.speaking,transcript=_useWhisper.transcript,transcripting=_useWhisper.transcripting,pauseRecording=_useWhisper.pauseRecording,startRecording=_useWhisper.startRecording,stopRecording=_useWhisper.stopRecording;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Whisper Transcription\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Recording: \",recording]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Speaking: \",speaking]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Transcripting: \",transcripting]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Transcribed Text: \",transcript.text]}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return startRecording();},children:\"Start\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return pauseRecording();},children:\"Pause\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return stopRecording();},children:\"Stop\"})]});};export default WhisperTranscription;","map":{"version":3,"names":["React","useWhisper","jsx","_jsx","jsxs","_jsxs","WhisperTranscription","_useWhisper","apiKey","recording","speaking","transcript","transcripting","pauseRecording","startRecording","stopRecording","children","text","onClick"],"sources":["/Users/andre/chatfront/src/SpeachToText.jsx"],"sourcesContent":["import React from 'react';\nimport { useWhisper } from '@chengsokdara/use-whisper'; // Make sure to import the useWhisper hook from your package\n\nconst WhisperTranscription = () => {\n  const {\n    recording,\n    speaking,\n    transcript,\n    transcripting,\n    pauseRecording,\n    startRecording,\n    stopRecording,\n  } = useWhisper({\n    apiKey: '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', // Replace with your OpenAI API token\n  });\n\n  return (\n    <div>\n      <h1>Whisper Transcription</h1>\n      <p>Recording: {recording}</p>\n      <p>Speaking: {speaking}</p>\n      <p>Transcripting: {transcripting}</p>\n      <p>Transcribed Text: {transcript.text}</p>\n      <button onClick={() => startRecording()}>Start</button>\n      <button onClick={() => pauseRecording()}>Pause</button>\n      <button onClick={() => stopRecording()}>Stop</button>\n    </div>\n  );\n};\n\nexport default WhisperTranscription;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,UAAU,KAAQ,2BAA2B,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAExD,GAAM,CAAAC,oBAAoB,CAAG,QAAvB,CAAAA,oBAAoBA,CAAA,CAAS,CACjC,IAAAC,WAAA,CAQIN,UAAU,CAAC,CACbO,MAAM,CAAE,qDAAuD;AACjE,CAAC,CAAC,CATAC,SAAS,CAAAF,WAAA,CAATE,SAAS,CACTC,QAAQ,CAAAH,WAAA,CAARG,QAAQ,CACRC,UAAU,CAAAJ,WAAA,CAAVI,UAAU,CACVC,aAAa,CAAAL,WAAA,CAAbK,aAAa,CACbC,cAAc,CAAAN,WAAA,CAAdM,cAAc,CACdC,cAAc,CAAAP,WAAA,CAAdO,cAAc,CACdC,aAAa,CAAAR,WAAA,CAAbQ,aAAa,CAKf,mBACEV,KAAA,QAAAW,QAAA,eACEb,IAAA,OAAAa,QAAA,CAAI,uBAAqB,CAAI,CAAC,cAC9BX,KAAA,MAAAW,QAAA,EAAG,aAAW,CAACP,SAAS,EAAI,CAAC,cAC7BJ,KAAA,MAAAW,QAAA,EAAG,YAAU,CAACN,QAAQ,EAAI,CAAC,cAC3BL,KAAA,MAAAW,QAAA,EAAG,iBAAe,CAACJ,aAAa,EAAI,CAAC,cACrCP,KAAA,MAAAW,QAAA,EAAG,oBAAkB,CAACL,UAAU,CAACM,IAAI,EAAI,CAAC,cAC1Cd,IAAA,WAAQe,OAAO,CAAE,SAAAA,QAAA,QAAM,CAAAJ,cAAc,CAAC,CAAC,EAAC,CAAAE,QAAA,CAAC,OAAK,CAAQ,CAAC,cACvDb,IAAA,WAAQe,OAAO,CAAE,SAAAA,QAAA,QAAM,CAAAL,cAAc,CAAC,CAAC,EAAC,CAAAG,QAAA,CAAC,OAAK,CAAQ,CAAC,cACvDb,IAAA,WAAQe,OAAO,CAAE,SAAAA,QAAA,QAAM,CAAAH,aAAa,CAAC,CAAC,EAAC,CAAAC,QAAA,CAAC,MAAI,CAAQ,CAAC,EAClD,CAAC,CAEV,CAAC,CAED,cAAe,CAAAV,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}